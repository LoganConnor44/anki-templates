/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MaterialBeautifyCard {
        "primaryVocab": string;
        "sentence": string;
        "sentencePhonic": string;
        "type": string;
        "vocabPhonic": string;
    }
    interface MaterialBeautifyChineseStudy {
        /**
          * Recognized card orientations: `question` | `answer`
         */
        "cardOrientation": string;
        /**
          * Recognized card types: `recognition` | `sentence` | `tones` | `writing` | `meaning` | `audio` | `secondary-sentence` | `secondary-recognition`
         */
        "cardType": string;
        /**
          * Option to always generate secondary character values and phonic values
         */
        "forceAutoGeneration": boolean;
        /**
          * All English language words allowed
         */
        "meaning": string;
        /**
          * Most forms of numbered pinyin allowed
         */
        "numberedPinyin": string;
        /**
          * Recognized phonics: `pinyin` | `zhuyin`
         */
        "preferredPhonic": string;
        /**
          * All characters allowed
         */
        "primaryCharacter": string;
        /**
          * All characters allowed
         */
        "primaryCharacterSentence": string;
        /**
          * Recognized hanzi typoes: 'simplified' | 'traditional'
         */
        "primaryHanziType": string;
        /**
          * All characters allowed
         */
        "secondaryCharacter": string;
        /**
          * All characters allowed
         */
        "secondaryCharacterSentence": string;
        /**
          * All English language words allowed
         */
        "sentenceMeaning": string;
        /**
          * Most forms of numbered pinyin allowed
         */
        "sentenceNumberedPinyin": string;
    }
    interface MaterialBeautifyContent {
        "phonic": string;
        "sentence": string;
        "sentencePhonic": string;
        "vocab": string;
    }
    interface MaterialBeautifySentence {
        "phonic": string;
        "sentence": string;
    }
    interface MaterialBeautifyType {
        "cardType": string;
    }
}
declare global {
    interface HTMLMaterialBeautifyCardElement extends Components.MaterialBeautifyCard, HTMLStencilElement {
    }
    var HTMLMaterialBeautifyCardElement: {
        prototype: HTMLMaterialBeautifyCardElement;
        new (): HTMLMaterialBeautifyCardElement;
    };
    interface HTMLMaterialBeautifyChineseStudyElement extends Components.MaterialBeautifyChineseStudy, HTMLStencilElement {
    }
    var HTMLMaterialBeautifyChineseStudyElement: {
        prototype: HTMLMaterialBeautifyChineseStudyElement;
        new (): HTMLMaterialBeautifyChineseStudyElement;
    };
    interface HTMLMaterialBeautifyContentElement extends Components.MaterialBeautifyContent, HTMLStencilElement {
    }
    var HTMLMaterialBeautifyContentElement: {
        prototype: HTMLMaterialBeautifyContentElement;
        new (): HTMLMaterialBeautifyContentElement;
    };
    interface HTMLMaterialBeautifySentenceElement extends Components.MaterialBeautifySentence, HTMLStencilElement {
    }
    var HTMLMaterialBeautifySentenceElement: {
        prototype: HTMLMaterialBeautifySentenceElement;
        new (): HTMLMaterialBeautifySentenceElement;
    };
    interface HTMLMaterialBeautifyTypeElement extends Components.MaterialBeautifyType, HTMLStencilElement {
    }
    var HTMLMaterialBeautifyTypeElement: {
        prototype: HTMLMaterialBeautifyTypeElement;
        new (): HTMLMaterialBeautifyTypeElement;
    };
    interface HTMLElementTagNameMap {
        "material-beautify-card": HTMLMaterialBeautifyCardElement;
        "material-beautify-chinese-study": HTMLMaterialBeautifyChineseStudyElement;
        "material-beautify-content": HTMLMaterialBeautifyContentElement;
        "material-beautify-sentence": HTMLMaterialBeautifySentenceElement;
        "material-beautify-type": HTMLMaterialBeautifyTypeElement;
    }
}
declare namespace LocalJSX {
    interface MaterialBeautifyCard {
        "primaryVocab"?: string;
        "sentence"?: string;
        "sentencePhonic"?: string;
        "type"?: string;
        "vocabPhonic"?: string;
    }
    interface MaterialBeautifyChineseStudy {
        /**
          * Recognized card orientations: `question` | `answer`
         */
        "cardOrientation"?: string;
        /**
          * Recognized card types: `recognition` | `sentence` | `tones` | `writing` | `meaning` | `audio` | `secondary-sentence` | `secondary-recognition`
         */
        "cardType"?: string;
        /**
          * Option to always generate secondary character values and phonic values
         */
        "forceAutoGeneration"?: boolean;
        /**
          * All English language words allowed
         */
        "meaning"?: string;
        /**
          * Most forms of numbered pinyin allowed
         */
        "numberedPinyin"?: string;
        /**
          * Recognized phonics: `pinyin` | `zhuyin`
         */
        "preferredPhonic"?: string;
        /**
          * All characters allowed
         */
        "primaryCharacter"?: string;
        /**
          * All characters allowed
         */
        "primaryCharacterSentence"?: string;
        /**
          * Recognized hanzi typoes: 'simplified' | 'traditional'
         */
        "primaryHanziType"?: string;
        /**
          * All characters allowed
         */
        "secondaryCharacter"?: string;
        /**
          * All characters allowed
         */
        "secondaryCharacterSentence"?: string;
        /**
          * All English language words allowed
         */
        "sentenceMeaning"?: string;
        /**
          * Most forms of numbered pinyin allowed
         */
        "sentenceNumberedPinyin"?: string;
    }
    interface MaterialBeautifyContent {
        "phonic"?: string;
        "sentence"?: string;
        "sentencePhonic"?: string;
        "vocab"?: string;
    }
    interface MaterialBeautifySentence {
        "phonic"?: string;
        "sentence"?: string;
    }
    interface MaterialBeautifyType {
        "cardType"?: string;
    }
    interface IntrinsicElements {
        "material-beautify-card": MaterialBeautifyCard;
        "material-beautify-chinese-study": MaterialBeautifyChineseStudy;
        "material-beautify-content": MaterialBeautifyContent;
        "material-beautify-sentence": MaterialBeautifySentence;
        "material-beautify-type": MaterialBeautifyType;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "material-beautify-card": LocalJSX.MaterialBeautifyCard & JSXBase.HTMLAttributes<HTMLMaterialBeautifyCardElement>;
            "material-beautify-chinese-study": LocalJSX.MaterialBeautifyChineseStudy & JSXBase.HTMLAttributes<HTMLMaterialBeautifyChineseStudyElement>;
            "material-beautify-content": LocalJSX.MaterialBeautifyContent & JSXBase.HTMLAttributes<HTMLMaterialBeautifyContentElement>;
            "material-beautify-sentence": LocalJSX.MaterialBeautifySentence & JSXBase.HTMLAttributes<HTMLMaterialBeautifySentenceElement>;
            "material-beautify-type": LocalJSX.MaterialBeautifyType & JSXBase.HTMLAttributes<HTMLMaterialBeautifyTypeElement>;
        }
    }
}
